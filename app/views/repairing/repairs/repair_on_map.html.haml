:scss
  .map_container{
    height: 650px;
    margin-bottom: 15px;
  }

.row
  .col-xs-12
    %h3.repair-title{ data: { repair_id: @repairing_repair.id, layer_id: @repairing_repair.layer.id } }
      = @repairing_repair.subject
  .map_container.col-xs-12
    = render partial: 'repairing/maps/map'

:javascript

  $(document).ready(function() {
    var aRepairMap = RepairMap({
      zoom: 12,
      minZoom: 5,
      maxZoom: 18,
      center: JSON.parse('#{@repairing_repair.repair_coordinate}'),
      getMapPopupContent: getMapPopupContent,
      scrollWheelZoom: true
    });
    var categories_icons = #{Repairing::Category.get_category_icons}

    // add markers
    $.ajax({
      method: 'get',
      url: '/repairing/layers/' + getLayerId() + '/geo_json?locale=uk',
      dataType: 'json'
    })
    .done(function (data) {
      aRepairMap.addGeoJsonPoints(data, getPoint, {
        clustered: true,
        style: {
          opacity: 0.5,
        },
        hoverStyle: {
          opacity: 1,
        },
        featureClickCallback: onFeatureClick,
        editInfoContent: true
      })
      openCurrentRepair()
    })
    .fail(function () {
    });

    function openCurrentRepair(){
      var repair_id = getRepairId();

      aRepairMap.map.eachLayer(function (layer) {

        // if(this.feature && this.feature.properties.id == repair_id){
        //   zoomToShowLayer(this)
        // }
        // var layer_c = this;
        // if ('_gridClusters' in layer_c){
        //   $.each(layer_c.getAllChildMarkers(), function(i, item){
        //     if(item.feature && item.feature.properties.id == repair_id){
        //       layer_c.zoomToShowLayer(item);
        //
        //     }
        //   })
        // }


        // if ('_gridClusters' in this){
        //   console.log('_gridClusters');
        //   this.on('clusterclick', function(a) {
        //     console.log(this);
        //     console.log(a);
        //     console.log(a.layer);
        //   })
        // }

        if ('_gridClusters' in layer){

          layer.on('clusterclick', function(a) {

            $.each(a.layer.getAllChildMarkers(), function(i, item){
              if(item.feature && item.feature.properties.id == repair_id){
                // onFeatureClick(this.feature, this);

                // var marker = a.layer.getAllChildMarkers()[0];
                // var content = marker._popup._content;
                // var cluster = a.target.getVisibleParent(marker);

                featureId = item.feature.properties.id
                console.log(featureId);
                $.ajax({
                  url: '/repairing/map/getInfoContentForPopup/' + featureId + "?locale=" + "#{params[:locale]}",
                  success:function(data){

                    var marker = a.layer.getAllChildMarkers()[0];
                    var content = data;
                    var cluster = a.target.getVisibleParent(marker);
                    cluster.bindPopup(content).openPopup();
                    // this.bindPopup(data).openPopup();
                  }
                })
              }
            })

          });

        }

        // if(this.feature && this.feature.properties.id == repair_id){
        //   onFeatureClick(this.feature, this);
        // }
      });
    }

    var Icon = L.Icon.extend({ options: { iconSize: [28, 28] }});
    // REPEAT !!!!!!!!!!!!
    // Same code in repairing/maps/_iframe.html.haml
    function getIconByCategory(parent_cat, child_cat){
      var iconCategoryUrl = '/assets/repairing/default_icon.png';
      if (categories_icons[child_cat]){
        iconCategoryUrl = categories_icons[child_cat];
      }
      else if (categories_icons[parent_cat]){
        iconCategoryUrl = categories_icons[parent_cat];
      }

      return new Icon({iconUrl: iconCategoryUrl});
    };
    function getPoint(properties) {
      var point = {}
      point.icon = getIconByCategory(properties.p_c_id, properties.c_id);

      return point;
    }

    function onMapClick(feature, popup) {
    }

    function getMapPopupContent(e) {
      var place_for_close_btn = '<span style="color:white">----</span>'
      var content = e.latlng.toString() + place_for_close_btn;
      return content
    }

    var _selectedFeature

    function onFeatureClick(feature, layer) {
      featureId = feature.properties.id
      $.ajax({
        url: '/repairing/map/getInfoContentForPopup/' + featureId + "?locale=" + "#{params[:locale]}",
        success:function(data){
          layer.bindPopup(data).openPopup();
        }
      })

    }

    function getRepairId(){
      return $('.repair-title').attr('data-repair-id');
    }

    function getLayerId(){
      return $('.repair-title').attr('data-layer-id');
    }

    function get_repair_info_modal(){
      var repair_id = getRepairId();
      $.ajax({
        url: "#{repairing_show_repair_info_path}",
        dataType: 'script',
        data: { id: repair_id },
        success: function(data){
          // modal_title.html("#{t('repairing.maps.instruction.item_9')}");
          // modal_dom.find('.modal-content').css('width','50vw');
          // modal_body.html(data);
          // modal_dom.modal();
        }
      })
    }

    $('body').on('click','.more-text',function(){
      get_repair_info_modal();
    });

  });
