:css
  .popup {
    margin: 20px;
  }
  .popup td{
    padding-right: 10px;
  }

  .form-inline .form-control {
    width: 100%;
  }

  /*.search_block, .search_block div {*/
    /*padding: 0;*/
    /*margin: 0;*/
    /*margin-bottom: 10px;*/
  /*}*/

  /*.search_block .form-control {*/
    /*height: 37px;*/
  /*}*/


:scss

  /* New search style. Begin */
  //.search_block {
  //  position: absolute;
  //  z-index: 1;
  //  width: calc(100vw - 50px);
  //  left: 50px;
  //  padding-top: 10px;
  //  .search-container {
  //    margin: 2px;
  //    ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
  //      color: white;
  //    }
  //    ::-moz-placeholder { /* Firefox 19+ */
  //      color: white;
  //    }
  //    :-ms-input-placeholder { /* IE 10+ */
  //      color: white;
  //    }
  //    :-moz-placeholder { /* Firefox 18- */
  //      color: white;
  //    }
  //    input:-webkit-autofill,
  //    textarea:-webkit-autofill,
  //    select:-webkit-autofill {
  //      background-color: #7D94A4 !important;
  //    }
  //
  //    .search-box {
  //      -webkit-transition: width 0.6s, border-radius 0.6s, background 0.6s, box-shadow 0.6s;
  //      transition: width 0.6s, border-radius 0.6s, background 0.6s, box-shadow 0.6s;
  //      width: 50px;
  //      height: 50px;
  //      border: none;
  //      cursor: pointer;
  //      background: #7D94A4;
  //      + label .search-icon {
  //        color: white;
  //      }
  //      &:hover {
  //        color: white;
  //        background: #A2B2BE;
  //        box-shadow: 0 0 0 2px #7D94A4;
  //        + label .search-icon {
  //          color: white;
  //        }
  //      }
  //      &:focus {
  //        -webkit-transition: width 0.6s cubic-bezier(0, 1.22, 0.66, 1.39), border-radius 0.6s, background 0.6s;
  //        transition: width 0.6s cubic-bezier(0, 1.22, 0.66, 1.39), border-radius 0.6s, background 0.6s;
  //        border: none;
  //        outline: none;
  //        box-shadow: none;
  //        padding-left: 15px;
  //        cursor: text;
  //        width: 300px;
  //        border-radius: auto;
  //        background: #7D94A4;
  //        color: white;
  //        + label .search-icon {
  //          color: white;
  //        }
  //      }
  //      &:not(:focus) {
  //        text-indent: -5000px;
  //      }
  //    }
  //
  //    #search_btn {
  //      position: relative;
  //      left: -5000px;
  //    }
  //
  //    .search-icon {
  //      position: relative;
  //      left: -36px;
  //      color: white;
  //      cursor: pointer;
  //    }
  //  }
  //}
  /* New search style. End */

  /* Search bar. Begin */
  //#sidebar {
  //  position: fixed;
  //  top: 0;
  //  left: 0;
  //  margin: 25px;
  //  transition: all 0.5s ease-in-out;
  //  ul {
  //    li {
  //      background: #7D94A4;
  //      overflow: hidden;
  //      transition: all .5s ease-in-out;
  //      white-space: nowrap;
  //      max-width: 50px;
  //      min-width: 50px;
  //      &:hover {
  //        max-width: 200px;
  //      }
  //      a {
  //        i {
  //          width: 50px;
  //          height: 50px;
  //          //box-shadow: 1px 0 #476B84;
  //          font-size: 12pt;
  //          text-align: center;
  //          line-height: 50px;
  //        }
  //        span {
  //          padding: 0 15px;
  //          opacity: 0;
  //          transform: translateX(15px);
  //        }
  //      }
  //    }
  //    > li a {
  //      height: 50px;
  //      //border-top: 1px solid #476B84;
  //      display: block;
  //      color: #FFF;
  //      line-height: 50px;
  //      text-decoration: none;
  //    }
  //  }
  //  &:hover ul li a span {
  //    opacity: 1;
  //    transform: translateX(0);
  //  }
  //}

  //#sidebar {
  //  position: absolute;
  //  width: 20%;
  //  height: auto;
  //  top: 190px;
  //  float: left;
  //  margin: 0 0 0 10px;
  //  z-index: 1;
  //  display: none;
  //}
  //
  //.left-side {
  //  ul {
  //    padding: 0;
  //    margin: 0;
  //    li {
  //      margin: 0 0 5px 0;
  //      a {
  //        .e-data, .prozzorro {
  //          width: 20px;
  //          height: 20px;
  //          margin: 15px;
  //        }
  //      }
  //    }
  //  }
  //}

  #repairing-map{
    width: 100%;
    height: 100%;
  }


#repairing-map
  -# Old search
  -#.search_block.col-xs-12
  -#  .input-group
  -#    = text_field_tag :q, '', :class => 'form-control', :placeholder => t('repairing.maps.map_select.search_adress')
  -#    .input-group-btn
  -#      = button_tag(type: 'submit', :class => 'btn btn-primary', :id => 'search_btn') do
  -#        = t('form.search')
  -#        %i.fa.fa-search.fa-lg

  -# Add filters categories before search bar
  -# (see details at: maps/_map.html.haml [ js => function (addCategoryControl) ])
  = render partial: 'repairing/maps/category_btns'

  -# New search
  -#.search_block.col-xs-12
  -#  %form.search-container{action: '#'}
  -#    %input#search-box.search-box{name: 'q', type: 'text', placeholder: t('repairing.maps.map_select.search_adress')}/
  -#    %label{for: 'search-box'}
  -#      %span.fa.fa-search.search-icon
  -#    %input#search_btn{type: 'submit'}

  -# Left buttons
  -#%nav#sidebar.left-side
  -#  %ul
  -#    %li
  -#      -#%a{:href => "#"}
  -#      = link_to '#', id: 'e-data' do
  -#        -#%i.fa.fa-user
  -#        = image_tag('icons/e-data_icon.png', class: 'e-data')
  -#        %span
  -#          = t('repairing.maps.sitebar.e_data')
  -#    %li
  -#      =link_to '#', id: 'prozzoro' do
  -#        -#%i.fa.fa-picture-o
  -#        = image_tag('icons/prozorro-icon.png', class: 'prozzorro')
  -#        %span
  -#          = t('repairing.maps.sitebar.prozzoro')
  -#    %li
  -#      -#%a{:href => "#"}
  -#      = link_to '#', id: 'more-info' do
  -#        %i.fa.fa-info
  -#        %span
  -#          = t('repairing.maps.sitebar.information')

  -#.modal.fade{:id => 'more-info-modal', role: 'dialog', tabindex: '-1',appendTo: '#map'}
  -#  .modal-dialog
  -#    .modal-content


  -#.modal.fade{:id => 'more-infoModal',  role: 'dialog', tabindex: '-1'}
  -#  .modal-dialog{:role => 'document'}
  -#    .modal-content
  -#      .modal-header
  -#        %button.close{'aria-label' => t('form.close'), 'data-dismiss' => 'modal', :type => 'button'}
  -#          %span{'aria-hidden' => 'true'} &times;
  -#        .modal-title
  -#          Додаткова інформація
  -#      .modal-body
  -#        Content here

  = render partial: 'map_ukraine'

:javascript

  $(document).ready(function() {

    function getRepairId(){
      return $('.new_info_panel').attr('data-repair-id');
    }

    function get_repair_info_modal(){
      var repair_id = getRepairId();
      $.ajax({
        url: "#{repairing_show_repair_info_path}",
        dataType: 'script',
        data: { id: repair_id },
        success: function(data){
          // modal_title.html("#{t('repairing.maps.instruction.item_9')}");
          //modal_dom.find('.modal-content').css('width','50vw');
          // modal_body.html(data);
          // modal_dom.modal();
        }
      })
    }

    $('body').on('click','.more-text',function(){
      get_repair_info_modal();
    });
    var embed_code = aMapEmbedCode();
    var src = 'https://' + window.location.host + "/repairing/maps/frame/6/";
    embed_code.initialize({width: '100%', height: '800px', el_id: "#embed_code", src: src});

    var categories, category = "all"
    var categories_icons = #{Repairing::Category.get_category_icons}

    var town = '#{@town}'
    var selected_year='#{@year}';

    var aRepairMap = RepairMap({
      zoom: parseInt('#{@zoom}'),
      minZoom: 3,
      maxZoom: 20,
      center: JSON.parse('#{@map_center.to_json}'),
      scrollWheelZoom: true
    })

    // add markers
    $.ajax({
      method: 'get',
      url: '#{repairing_geo_json_path}',
      data: {
        town: town,
      },
      dataType: 'json',
    })
    .done(function (data) {

      function addMarkers() {
        filtered_data = {type: data.type, features: [], last_update: data.last_updated}

        data.features.forEach(function (feature){
          if ((selected_year == '' || feature.properties.year == selected_year)
           && (town == '' || feature.properties.t_id == town)
           && (category == 'all' || category == feature.properties.p_c_id)) {
            filtered_data.features.push(feature)
          }
        })

        aRepairMap.addGeoJsonPoints(filtered_data, getPoint, {
          clustered: true,
          style: {
            opacity: 0.8,
          },
          hoverStyle: {
            opacity: 1,
          },
          featureClickCallback: onFeatureClick,
          getMapPopupContent: getMapPopupContent,
          //getInfoContent: getInfoContent,
          selectPath: false,
          getPoint: getPoint
        })
      }

      addMarkers()

      categories = JSON.parse('#{@categories.to_json(:except => :img)}')
      aRepairMap.addCategoryControl(categories);

      $('#fullscreen').click(function(){
        aRepairMap.toggleMapInFullscreen();
      })

      $('#category_btns .btn').on("click",function(){
        if($(this).hasClass('active')){
          $('#category_btns .btn').removeClass('active');
          $('#category_title').html('');
          category = "all";
        } else {
          $('#category_btns .btn').removeClass('active');
          $(this).addClass('active');
          $('#category_title').html($(this).attr('title'));
          category = $(this).data('id');
        }

        //updateCategoryControl()
        function updateCategoryControl(){
          if(category == "all") {
            $('#subcategories').html('');
          } else {
            var content = "<div class='checkbox'><label style='font-weight:bold;'><input type='checkbox' value='all' checked='checked'>всі види робіт</label></div>";
            $.each(categories[category], function(i,d){
              content += "<div class='checkbox'><label><input type='checkbox' value='" + d._id.$oid + "' checked='checked'>" + d.title + "</label></div>"
            });
            $('#subcategories').html(content);
            var all_work = $('input[value="all"]');
            all_work.on("change", function(){
              var subcategories = $('#subcategories input[type="checkbox"]');
              if($(this).attr('checked')){
                subcategories.removeAttr('checked');
                subcategories.prop('checked', false);

                //markers.getLayers()[0].eachLayer(function(layer){
                //  map.removeLayer(layer);
                //});
              } else {
                subcategories.attr('checked','checked');
                subcategories.prop('checked', true);
                //markers.getLayers()[0].eachLayer(function(layer){
                //  if(layer.feature.properties.parent_category_id == category && (layer.feature.properties.town_id == town || !town) && layer.feature.properties.year == year){
                //    map.addLayer(layer);
                //  }
                //});
              }
            });
            $('#subcategories input[type="checkbox"]:not(input[value="all"])').on("change",function(){
              var checked = $('#subcategories input[type="checkbox"]:checked');

              //markers.getLayers()[0].eachLayer(function(layer){
              //  if(layer.feature.properties.parent_category_id == category){
              //    map.removeLayer(layer);
              //    $.each(checked, function(i,d){
              //      var sub = $(d).val();
              //      if(sub == layer.feature.properties.category_id && (layer.feature.properties.town_id == town || !town) && layer.feature.properties.year == year) {
              //        //map.addLayer(layer);
              //      }
              //    })
              //  }
              //});
              if(checked.length < categories[category].length || (checked.length == categories[category].length && all_work.attr('checked'))){
                all_work.removeAttr('checked');
                all_work.prop('checked', false);
              } else {
                all_work.attr('checked','checked');
                all_work.prop('checked', true);
              }
            })
          }

        }

        addMarkers()
      })
      $('.road-cond-select a').click(function(){
        var $this = $(this);
        var tileName = $this.attr('href').substring(1);
        $this.toggleClass('active');
        if($this.hasClass('active')){
          aRepairMap.addAdditionalLayer(tileName)
        }else{
          aRepairMap.removeAdditionalLayer(tileName);
        }
      })

      $("#year_select").on("change", function(){
        selected_year = $(this).val()

        addMarkers()
      });

      $('#q').keypress(function (e) {
        // console.log('#q');
        if (e.which == 13) {
          $('#search_btn').trigger("click");
          return false;
        }
      });

      // $("#search_btn").on("click", function(){
      //   aRepairMap.showAdressMarker($("#q").val());
      // })

      $('#map_town').select2({
        sortResults: function(results, container, query) {
          if (query.term) {
              // use the built in javascript sort function
              return results.sort(function(a, b) {
                  if (a.text.length > b.text.length) {
                      return 1;
                  } else if (a.text.length < b.text.length) {
                      return -1;
                  } else {
                      return 0;
                  }
              });
          }
          return results;
      },
        allowClear: true,
        multiSelect: false,
        multiple: false,
        minimumInputLength: 2,
        placeholder: I18n.t('repairing.maps.map_select.select_town'),
        width: '100%',
        ajax: {
          url: '#{search_for_towns_town_path}',
          dataType: 'json',
          quietMillis: 250,
          data: function (term, page) {
            return {
              query: term, // search term
            };
          },
          results: function (data, page) {
            return { results: data };
          },
          cache: true
        },
      }).on("change", function(){
        town = $(this).val();
        addMarkers()
        //aRepairMap.addTownLayer(town);
      });
    })
    .fail(function () {
    });

    var Icon = L.Icon.extend({ options: { iconSize: [28, 28] }});

    function getIconByCategory(category_id){

      var iconCategoryUrl = '/assets/repairing/default_icon.png';
      if (categories_icons[category_id] ){
        iconCategoryUrl = categories_icons[category_id];
      };

      return new Icon({iconUrl: iconCategoryUrl});
    };
    function getPoint(properties) {
      var point = {}
      point.icon = getIconByCategory(properties.p_c_id);

      return point;
    }

    function onFeatureClick(feature, layer) {
      featureId = feature.properties.id
      $.ajax({
        url: '/repairing/map/getInfoContentForPopup/' + featureId + "?locale=" + "#{params[:locale]}",
        success:function(data){
         layer.bindPopup(data).openPopup();
        }
      })
    }

    function getMapPopupContent(e) {
      var content = e.latlng.toString()
      return content
    }


  })