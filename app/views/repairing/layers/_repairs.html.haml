:scss

  table{
    border-spacing: 1px;
    border-collapse: separate;
    tr:nth-child(even) {background: #DDD}
    tr:nth-child(odd) {background: #FFF}
    td{
      border: 0px;
      border-right: 1px #FFF;
    }
    .popover-content {
      padding: 0;
    }
  }


%h1 Listing repairs
%table#edit_repairs
  %tr
    %th Subject
    %th Edrpou artist
    %th Erdpou spending units
    %th Object owner
    %th Repairing category
    %th Amount
    %th Warranty
    %th Repair start date
    %th Repair end date
    %th Address
    %th Address to
    %th Description
    %th Coordinates
    %th
    %th

  - repairs.each do |repair|
    %tr.editable-table-row
      %td
        %a.editable.editable-row-item{ href: '#',
                                       id: 'subject', 'data-pk' => "#{repair.id}",
                                       'data-emptytext' => t('repairing.layers.edit.title') }
          = repair.subject
      %td= repair.edrpou_artist
      %td= repair.edrpou_spending_units
      %td
        %a.editable.editable-row-item{ href: '#',
                                       id: 'obj_owner', 'data-pk' => "#{repair.id}",
                                       'data-emptytext' => t('repairing.layers.edit.title') }
          = repair.obj_owner
      -#%td
      -#  %a.editable.editable-row-item{ href: '#', 'data-resource' => 'repairing_repair',
      -#                   id: 'obj_owner', 'data-type' => 'text', 'data-pk' => "#{repair.id}",
      -#                   'data-url' => "#{repairing_layer_repair_path(repair.layer_id, repair)}"
      -#                   'data-emptytext' => t('repairing.layers.edit.title') }
      -#    = repair.obj_owner
      %td= repair.repairing_category.title if repair.repairing_category
      %td= repair.amount
      %td= repair.warranty_date
      %td= repair.repair_start_date
      %td= repair.repair_end_date
      %td= repair.address
      %td= repair.address_to
      %td= repair.description
      %td= repair.coordinates
      %td
        %buttom#save-btn.btn.btn-primary{ 'data-url' => "#{repairing_layer_repair_path(repair.layer_id, repair)}",
                                          'data-repair-id' => "#{repair.id}" }
          Save
      %td
        %buttom#reset-btn.btn
          Reset
      -#%td= link_to 'Show', repair
      -#%td= link_to 'Edit', edit_repairing_repair_path(repair)
      -#%td= link_to 'Destroy', repair, :method => :delete, :data => { :confirm => 'Are you sure?' }

:javascript

  $(document).ready(function(){
    $.fn.editable.defaults.mode = 'inline';

    //init editables
    $('.editable-row-item').editable({
      // url: '/post' //this url will not be used for creating new user, it is only for update
      type: 'text',
      emptytext: 'Click to Edit',
      // showbuttons: false,
      // unsavedclass: null,
      // toggle: 'manual',
      resource: 'repairing_repair',
      // onblur: 'ignore',
      // success: function (response, newValue) {
      //   // console.log(newValue);
      //   show_bootstrap_flash(response.message,response.class_name);
      // }
    });

    //make username required
    // $('#new_username').editable('option', 'validate', function(v) {
    //   if(!v) return 'Required field!';
    // });

    //automatically show next editable
    // $('.myeditable').on('save.newuser', function(){
    //   var that = this;
    //   setTimeout(function() {
    //     $(that).closest('tr').next().find('.myeditable').editable('show');
    //   }, 200);
    // });

    $('#save-btn').click(function() {
      var id_repair = $(this).attr('data-repair-id');
      var data = {};
      data['repairing_repair'] = {};

      $("[data-pk=" + id_repair +"]").each(function(){
         var name = $(this).attr('id'),
             value = $(this).text();

         data['repairing_repair'][name] = [];
         data['repairing_repair'][name] = value;
      });

      // console.log($('#form .editable'));

      $('editable-row-item').editable('submit', {
        url: $(this).attr('data-url'),
        ajaxOptions: {
          dataType: 'json', //assuming json response
          type: "PUT",
          data: data
        },
        success: function (response, newValue) {
          // console.log(newValue);
          show_bootstrap_flash(response.message,response.class_name);
        }
        // success: function(data, config) {
        //   if(data && data.id) {  //record created, response like {"id": 2}
        //     //set pk
        //     $(this).editable('option', 'pk', data.id);
        //     //remove unsaved class
        //     $(this).removeClass('editable-unsaved');
        //     //show messages
        //     var msg = 'New user created! Now editables submit individually.';
        //     $('#msg').addClass('alert-success').removeClass('alert-error').html(msg).show();
        //     $('#save-btn').hide();
        //     $(this).off('save.newuser');
        //   } else if(data && data.errors){
        //     //server-side validation error, response like {"errors": {"username": "username already exist"} }
        //     config.error.call(this, data.errors);
        //   }
        // },
        // error: function(errors) {
        //   var msg = '';
        //   if(errors && errors.responseText) { //ajax error, errors = xhr object
        //     msg = errors.responseText;
        //   } else { //validation error (client-side or server-side)
        //     $.each(errors, function(k, v) { msg += k+": "+v+"<br>"; });
        //   }
        //   $('#msg').removeClass('alert-success').addClass('alert-error').html(msg).show();
        // }
      });
    });

    // $('#edit_repairs .editable').editable({
    //   success: function(response,newValue){
    //     show_bootstrap_flash(response.message,response.class_name);
    //     console.log(response);
    //   }
    // });

    // $('.editable-row-item').editable({
    //   type: 'text',
    //   emptytext: 'Click to Edit',
    //   showbuttons: false,
    //   unsavedclass: null,
    //   toggle: 'manual',
    //   resource: 'repairing_repair',
    //   onblur: 'ignore',
    //   success: function (response, newValue) {
    //     // console.log(newValue);
    //     show_bootstrap_flash(response.message,response.class_name);
    //   }
    // });
    //
    // function submitEditable() {
    //   $('.editable-table-row .editableform').editable().submit();
    //   }
    //
    // $('.editable-table-row').on('click', function (e) {
    //   e.stopPropagation();
    //   e.preventDefault();
    //   if ($(this).find('.editableform').length < 1) { submitEditable();}
    //   $(this).find('a').each(function () { $(this).editable('show'); });
    //   $(this).find('.editableform').each(function () { $(this).on('keydown', function (e) { if ((e.keyCode || e.which) == 13) { submitEditable(); } }) });
    //
    // });
    //
    // $(document).click(function () {
    //   submitEditable();
    // });

  })