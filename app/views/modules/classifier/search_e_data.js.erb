$('.results').html('<%= escape_javascript(render partial: "search_e_data") %>');



<%#- unless params[:payers_edrpous].blank? || @receivers.size < 3 %>
<%#- if ((params[:payers_edrpous].present? and not params[:recipt_edrpous].present?) or (not params[:payers_edrpous].present? and params[:recipt_edrpous].present?)) and @receivers.size > 3 %>
<%- if @receivers.size > 3 %>
  $('#most-received').show();

  var label = [];
  var data_set = [];
  var edrpous = [];
  <%- @receivers.each do |payment| %>
    <!-- gsub for apostrophe `'` because js crash -->
    label.push('<%= "#{payment[:name][0..30]}...".gsub("'", '’').html_safe %>');
    data_set.push(<%= '%.2f' % payment[:val] %>);
    edrpous.push('<%= payment[:edrpou] %>');
  <%- end %>

  // prepare chart options and datasets
  var data = {
    labels: label,
    datasets: [
      {
        label: I18n.t('modules.classifier.chart.total'),
        backgroundColor: 'rgba(98, 141, 182, 1)',
        hoverBackgroundColor: 'rgba(255, 211, 4, 1)',
        data: data_set
      }
    ]
  };
  var ctx = $('#barChart').get(0);
  var options = {
    maintainAspectRatio: false,
    onClick: function (e, data) {
      graph_click(edrpous[data[0]._index], label[data[0]._index]);
    },
    tooltips: {
      backgroundColor: 'rgba(12, 34, 49, 1)'
    },
    legend: {
      display: false
    },
    scales: {
      yAxes: [{
        gridLines: {
          display: false
        },
        barPercentage: 0.7,
        ticks: {
          fontSize: 14,//$(window).width() >= 1024 ? 12 : 8,
          autoSkip: false,
          maxRotation: 0
        }
      }],
      xAxes: [{
        type: 'logarithmic',
        position: 'bottom',
        gridLines: {
          drawBorder: false,
          display: false
        },
        ticks: {
          min: data_set[data_set.length-1] / 2,
          max: data_set[0] * 2,
          display: false
        }
      }]
    },
    animation: {
      duration: 2000,
      easing: 'easeInOutSine',
      onProgress: function () {
        // render the value of the chart above the bar
        var ctx = this.chart.ctx;
        ctx.font = Chart.helpers.fontString(
            14,
            //$(window).width() >= 1024 ? Chart.defaults.global.defaultFontSize : Chart.defaults.global.defaultFontSize,
            'normal',
            Chart.defaults.global.defaultFontFamily
        );
        ctx.fillStyle = this.chart.config.options.defaultFontColor;
        ctx.textAlign = 'left';
        ctx.textBaseline = 'top';
        this.data.datasets.forEach(function (dataset) {
          for (var i = 0; i < dataset.data.length; i++) {
            var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model;
            ctx.fillText(parseFloat(dataset.data[i] / 1000).toFixed(1) + ' тис. грн.', model.x + 5, model.y - 5);
          }
        });
      }
    }
  };
  <%- if params[:by_purpose].blank? %>
    if (barChart) {
      barChart.destroy();
      //$('#most-received').hide();
    }
    // create and draw the chart
    var barChart = new Chart(ctx, {
      type: 'horizontalBar',
      data: data,
      options: options
    });
  <%- end %>

<%- end %>
