:scss

  .rails-bootstrap-forms-error-summary{
      padding: 0;
    li{
      color: darkred;
      background: #fbdcdc;
      padding: 10px;
      border-radius: 5px;
      list-style-type: none;
      list-style: none;
    }
  }
  .label-emails{
    font-size: 16px;
    font-style: italic;
    font-weight: bold;
    margin-bottom: 6px;
  }
  .dropdown > a:after {
    content: " "
  }

.width-container.clearfix
  .column_container.clearfix
    = bootstrap_form_for @town, label_errors: true, :html => { :class => 'edit_town', :multipart => true} do |f|
      .row.top-user-menu
        .col-md-6
          %a{ :href => '#', 'data-resource' => 'town', id: 'title', 'data-type' => 'text', 'data-pk' => "#{@town.id}", 'data-url' => "#{town_path(@town)}", 'data-emptytext' => 'Введіть назву територіальної одиниці' }
            = @town.title
        .col-md-6.fix-pad
          = link_to content_tag(:i, nil, class: 'fa fa-times'), towns_path, :class => 'btn btn-default pull-right'
          = button_tag(class: 'btn btn-primary pull-right') do
            %i.fa.fa-floppy-o
      .row
        .col-md-12
          = f.error_summary
        .col-md-5
          .upload_img
            -if @town.img?
              =image_tag @town.img.thumb.url
            -else
              =image_tag "no_image.png"
          = f.file_field :img, class: 'btn btn-default'
          %a.btn.btn-default.button-toggle
            %i.fa.fa-cog
          .row.toggle-element{"data-state" => "closed"}
            .col-md-6.r-pad
              = f.text_field :koatuu, :readonly => true, class: 'control-label'
            .col-md-6
              = f.text_field :level, :readonly => true, class: 'control-label'
            .col-md-12
              = f.text_area :coordinates, class: 'control-label'
              = f.text_field :geometry_type, class: 'control-label', label: t('mongoid.attributes.town.geographical_type')
              = f.fields_for :counters, @town.counters || @town.build_counters do |c|
                = render 'counters', f: c
        .col-md-7
          = f.text_area :links, :placeholder => t("town_links_placeholder"), class: 'wysihtml5'
          %hr.towns-form
          = f.text_area :description, :placeholder => t("town_description_placeholder"), class: 'wysihtml5'

          %hr.towns-form
          = f.check_box :permit_emails, label: 'Включити модуль "Зворотній зв`язок"'
          .label-emails Emails:
          - TownEmail::OWNERS.each do |owner|
            = f.fields_for :emails, @town.emails.find_or_initialize_by(owner: owner) do |ff|
              = ff.hidden_field :owner
              = ff.email_field :email, label: t("mongoid.attributes.town.#{owner}")

      .row.buttom-user-menu
        .col-md-12.fix-pad
          = link_to t('.cancel', :default => t("helpers.links.cancel")), towns_path, class: 'btn btn-default pull-right'
          = f.submit nil, class: 'btn btn-primary pull-right'
          - if check_admin
            = link_to t('destroy'), @town, method: :delete, data: { confirm: t('devise.confirm') }, class: 'btn btn-danger'


:javascript

  $(document).ready(function(){

      var editor_locale;
      if(I18n.locale == "uk") {
        editor_locale = "ua-UA";
      } else {
        editor_locale = "";
      }

    $('.wysihtml5').each(function(i, elem) {
      $(elem).wysihtml5({
        "font-styles": true, // Font styling, e.g. h1, h2, etc.
        "emphasis": true, // Italics, bold, etc.
        "lists": true, // (Un)ordered lists, e.g. Bullets, Numbers.
        "html": false, // Button which allows you to edit the generated HTML.
        "link": true, // Button to insert a link.
        "image": true, // Button to insert an image.
        "color": false, // Button to change color of font
        "size": 'xs', // options are xs, sm, lg
        "locale": editor_locale
      });
    });

    function readURL(input) {
      if (input.files && input.files[0]) {
        var reader = new FileReader();
        reader.onload = function (e) {
          $(".upload_img").find('img').attr('src', e.target.result);
          $(".upload_img").find('img').show();
          if($(".new_lot_img").length>0){
             $(".new_lot_img").attr('src', e.target.result);
          }
        }
        reader.readAsDataURL(input.files[0]);
      }
    }

    $("input[type=file]").on("change",function(){
      readURL(this);
    });

    (function () {

      var toggleState = function (elem, one, two) {
        elem.setAttribute('data-state', elem.getAttribute('data-state') === one ? two : one);
      };

      var toggleButton = document.querySelector('.button-toggle');
      var toggleElement = document.querySelector('.toggle-element');

      toggleButton.onclick = function (e) {
        toggleState(toggleElement, 'closed', 'open');
      };

    })();

    $('#title').editable({
      'disabled': 'true',
      'mode': 'inline'
    })
  })

