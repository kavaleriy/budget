:scss

  .select2_select{
    padding: 3px 5px 3px 5px !important;
    height: 25px;
    width: 97%;
    color: blue;
    background: #F1F1F1 !important;
    .select2-search-choice-close{
      color: red;
      left: 100%;
    }
  }

= bootstrap_form_for @budget_file, :html => { :class => 'form-vertical' } do |f|
  - if @budget_file.new_record?
    - unless @taxonomies.blank?
      .form-group
        %label.control-label
          = t('taxonomy')
        = text_field_tag :budget_file_taxonomy,'',class: 'form-control'
        -#= select_tag :budget_file_taxonomy, options_for_select( [nil] + @taxonomies.all.collect { |p| [ p.title, p.id ] }, @current_taxonomy_id ) , class: 'form-control'

  .form-group
    %label.control-label
      = t('owner')
    - if current_user.is_admin?
      = text_field_tag 'town', current_user.town_model.id
    - else
      -#= ": #{current_user.town}"
      -#- town = current_user.town_model.title.split(',')
      -#- if town.length > 1
      -#  = select_tag :town, options_for_select(Town.all.where(:title => town[0].strip, :area_title => town[1].strip), current_user.town), class: 'select-town form-control'
      -#- else
      -#  -test = (Town.all.where(_id: current_user.town_model.id) + Town.all.where(:area_title => current_user.town_model.title)).map{|town| [town.title,town.id]}

      = select_tag :town, options_for_select([current_user.town_model].map{|town| [town.title, town.id]}), class:'select-town form-control'

  .form-group
    = f.select :data_type, options_for_select( [nil, :plan, :fact], @budget_file.data_type), class: 'select-town form-control', label: t('data_type')

  = f.file_field :path, multiple: true, label: t('file_path'), class: 'btn btn-default','required' => 'required'

  = f.submit nil, :class => 'btn btn-primary'
  = link_to t('form.cancel', :default => t("helpers.links.cancel")), budget_files_path, :class => 'btn btn-default'

:javascript

  $(document).ready(function() {
    var js_array = #{@taxonomies.to_json};
    $("#budget_file_taxonomy").select2( {
        tags: js_array,
        placeholder: I18n.t('placeholder_select2'),
        formatSelectionCssClass: function (data, container) { return "select2_select"; },
        maximumSelectionSize: 1,
    });
    init_town_select2_with_field_id('#town',"#{search_for_towns_town_path}");

    $('#town_select').select2({
      sortResults: function(results, container, query) {
        if (query.term) {
            // use the built in javascript sort function
            return results.sort(function(a, b) {
                if (a.text.length > b.text.length) {
                    return 1;
                } else if (a.text.length < b.text.length) {
                    return -1;
                } else {
                    return 0;
                }
            });
        }
        return results;
      },
      initSelection: function(element, callback) {
      },
      allowClear: false,
      multiSelect: false,
      multiple: false,
      minimumInputLength: 2,
      width: '100%',
      ajax: {
        url: '#{search_town_path}',
        dataType: 'json',
        quietMillis: 250,
        data: function (term, page) {
          return {
            query: term, // search term
          };
        },
        results: function (data, page) {
          return { results: data };
        },
        cache: true
      },
    })

  })