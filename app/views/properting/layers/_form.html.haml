:scss
  .child_category_select{
    display: none;
  }

= simple_form_for @properting_layer do |f|

  - unless current_user.admin?
    = t('repairing.repairs.form.town') + ": " + current_user.town

  = f.input :town, as: type_for_user_role,
                   label: t('repairing.repairs.form.town'),
                   input_html: {value: current_user.town_model.id}
  = f.input :locale, as: :hidden, input_html: {value: params[:locale]}
  = f.input :title, label: t('repairing.repairs.form.title'), class: 'form-control'

  .row
    .col-md-6
      = f.input :properting_category,
                collection: @categories.map {|cat| [ cat.title, cat.id ] },
                label: t('repairing.repairs.form.category')
    .col-md-6.form-group.child_category_select
      = label_tag :child_category,
                  t('repairing.repairs.repair_info.description'),
                  class: 'select control-label'
      = f.grouped_collection_select :properting_category, Properting::Category.tree_root, :categories, :title, :id, :title,
                  { include_blank: true },
                  { class: 'select form-control', id: 'child_category', name: 'child_category' }

  = f.input :status, collection: {t('js.visify.plan') => :plan, t('js.visify.fact') => :fact},
                     prompt: false,
                     label: t('repairing.repairs.form.status')
  = f.input :year, collection: years_from(2015),
                     prompt: false,
                     label: t('repairing.repairs.form.year')
  = f.input :description, as: :text,  label: t('repairing.repairs.form.description'), rows: '8'
  = f.input :properties_file,as: :file, label: t('repairing.repairs.form.repairs_file')

  = f.submit t('form.add'), class: 'btn btn-primary'
  = link_to t('form.cancel', default: t('helpers.links.cancel')), properting_layers_path, class: 'btn btn-default'

:javascript
  $(document).ready(function(){
    init_town_select2_with_field_id('#properting_layer_town',"#{search_for_towns_town_path}");
    $("#properting_layer_town").select2("data", {id: "#{current_user.town_model.id}", text: "#{current_user.town_model.title}" });


    // dynamic generate second select with children properting categories
    var children_ctegories = $('#child_category').html();

    $('#properting_layer_properting_category').change(function() {
      var category, options;
      category = $('#properting_layer_properting_category :selected').text();
      options = $(children_ctegories).filter("optgroup[label='" + category + "']").html();
      if (options) {
        $('#child_category').html("<option value=''></option>");
        $('#child_category').append(options);
        return $('#child_category').parent().show();
      } else {
        $('#child_category').empty();
        return $('#child_category').parent().hide();
      }
    });
  });
