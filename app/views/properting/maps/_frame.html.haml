:scss

  #properting-map{
    background-color: #ffffff;
    width: 100%;
    height: 100%;
  }


#properting-map
  = render partial: 'properting/maps/category_btns'
  = render partial: 'map_ukraine'

:javascript
  var aPropertyMap = {}
  $(document).ready(function() {
    var embed_code = aMapEmbedCode();
    var src = 'https://' + window.location.host + "/properting/maps/frame/6/";
    embed_code.initialize({width: '100%', height: '800px', el_id: "#embed_code", src: src});

    var categories, category = "all"
    var categories_icons = #{Properting::Category.get_category_icons}

    var property_status = '';

    var town = '#{@town}';
    var selected_year='#{@year}';

    aPropertyMap = PropertyMap({
      zoom: parseInt('#{@zoom}'),
      minZoom: 3,
      maxZoom: 20,
      center: JSON.parse('#{@map_center.to_json}'),
      scrollWheelZoom: true
    });
    $('#map').on('hide.bs.modal', function(){
      aPropertyMap.map.scrollWheelZoom.enable();
      aPropertyMap.map.dragging.enable();
    });
    // add markers
    $.ajax({
      method: 'get',
      url: '#{properting_geo_json_path}',
      data: {
        town: town,
      },
      dataType: 'json',
    })
    .done(function (data) {
      aPropertyMap.data = data;
      aPropertyMap.heatMapLayerActive = false;

      function addMarkers() {
        var filtered_data = {
          type: data.type,
          features: [],
          last_update: data.last_updated,
          last_year_data: data.last_year_data
        }

        if(property_status == 'heatmap'){
          property_status = ''
        }
        var heatMapdata = {}
        data.features.forEach(function (feature){
          if ((selected_year == '' || feature.properties.year == selected_year)
           && (town == '' || feature.properties.t_id == town)
           && (category == 'all' || category == feature.properties.p_c_id)
           && (property_status == '' || property_status == feature.properties.status)) {
            if(feature.properties.per_meter > 5){
              filtered_data.features.push(feature)
              if(!heatMapdata[feature.geometry.coordinates]){
                heatMapdata[feature.geometry.coordinates] = {
                  coords: feature.geometry.coordinates,
                  features: []
                }
              }
              heatMapdata[feature.geometry.coordinates].features.push(feature);
            }
          }
        });
        if(!aPropertyMap.heatMapLayerActive){
          aPropertyMap.addGeoJsonPoints(filtered_data, getPoint, {
            clustered: true,
            style: {
              opacity: 0.8,
            },
            hoverStyle: {
              opacity: 1,
            },
            featureClickCallback: onFeatureClick,
            getMapPopupContent: getMapPopupContent,
            selectPath: false,
            getPoint: getPoint
          })
        }
        aPropertyMap.heatMapdata = heatMapdata
      }

      addMarkers();

      aPropertyMap.map.on('zoomend', function(e){
        var target = e.target;
        if(aPropertyMap.heatMapLayerActive && target.getZoom() >= 15){
          aPropertyMap.hideHeatMap();
        }else if(aPropertyMap.heatMapLayerActive && target.getZoom() < 15){
          aPropertyMap.showHeatMap(aPropertyMap.heatMapdata);
        }
      });

      // categories = JSON.parse('#{@categories.to_json(:except => :img)}')

      $('#category_btns .btn').on("click",function(){
        if($(this).hasClass('active')){
          $('#category_btns .btn').removeClass('active');
          $('#category_title').html('');
          category = "all";
        } else {
          $('#category_btns .btn').removeClass('active');
          $(this).addClass('active');
          $('#category_title').html($(this).attr('title'));
          category = $(this).data('id');
        }

        //updateCategoryControl()
        // function updateCategoryControl(){
        //   if(category == "all") {
        //     $('#subcategories').html('');
        //   } else {
        //     var content = "<div class='checkbox'><label style='font-weight:bold;'><input type='checkbox' value='all' checked='checked'>всі види робіт</label></div>";
        //     $.each(categories[category], function(i,d){
        //       content += "<div class='checkbox'><label><input type='checkbox' value='" + d._id.$oid + "' checked='checked'>" + d.title + "</label></div>"
        //     });
        //     $('#subcategories').html(content);
        //     var all_work = $('input[value="all"]');
        //     all_work.on("change", function(){
        //       var subcategories = $('#subcategories input[type="checkbox"]');
        //       if($(this).attr('checked')){
        //         subcategories.removeAttr('checked');
        //         subcategories.prop('checked', false);
        //
        //       } else {
        //         subcategories.attr('checked','checked');
        //         subcategories.prop('checked', true);
        //       }
        //     });
        //     $('#subcategories input[type="checkbox"]:not(input[value="all"])').on("change",function(){
        //       var checked = $('#subcategories input[type="checkbox"]:checked');
        //
        //       if(checked.length < categories[category].length || (checked.length == categories[category].length && all_work.attr('checked'))){
        //         all_work.removeAttr('checked');
        //         all_work.prop('checked', false);
        //       } else {
        //         all_work.attr('checked','checked');
        //         all_work.prop('checked', true);
        //       }
        //     })
        //   }
        // }
        addMarkers()
      });

      $(".status-btns .btn").on("click", function(){
        if($(this).hasClass('active')){
          $('.status-btns .btn').removeClass('active');
          property_status = "";
        } else {
          $('.status-btns .btn').removeClass('active');
          $(this).addClass('active');
          property_status = $(this).data('status');
        }







        if($(this).hasClass('active') && property_status == 'heatmap'){
          aPropertyMap.showHeatMap(aPropertyMap.heatMapdata);
        }else{
          aPropertyMap.hideHeatMap();
          addMarkers()
        }









      });

      $("#year_select").on("change", function(){
        selected_year = $(this).val();
        addMarkers()
      });

      $('#q').keypress(function (e) {
        // console.log('#q');
        if (e.which == 13) {
          $('#search_btn').trigger("click");
          return false;
        }
      });

      $('#map_town').select2({
        sortResults: function(results, container, query) {
          if (query.term) {
            // use the built in javascript sort function
            return results.sort(function(a, b) {
              if (a.text.length > b.text.length) {
                  return 1;
              } else if (a.text.length < b.text.length) {
                  return -1;
              } else {
                  return 0;
              }
            });
          }
          return results;
      },
        allowClear: true,
        multiSelect: false,
        multiple: false,
        minimumInputLength: 2,
        placeholder: I18n.t('repairing.maps.map_select.select_town'),
        width: '100%',
        ajax: {
          url: '#{search_for_towns_town_path}',
          dataType: 'json',
          quietMillis: 250,
          data: function (term, page) {
            return {
              query: term, // search term
            };
          },
          results: function (data, page) {
            return { results: data };
          },
          cache: true
        },
      }).on("change", function(){
        town = $(this).val();
        addMarkers()
      });
    })
    .fail(function () {
    });

    var Icon = L.Icon.extend({ options: { iconSize: [28, 28] }});

    function getIconByCategory(parent_cat, child_cat){
      var iconCategoryUrl = '/assets/properting/default_icon.png';
      if (categories_icons[child_cat]){
        iconCategoryUrl = categories_icons[child_cat];
      }
      else if (categories_icons[parent_cat]){
        iconCategoryUrl = categories_icons[parent_cat];
      }
      return new Icon({iconUrl: iconCategoryUrl});
    };
    function getPoint(properties) {
      var point = {}
      point.icon = getIconByCategory(properties.p_c_id, properties.c_id);

      return point;
    }

    function onFeatureClick(feature, layer) {
      var property_id = feature.properties.id;
      $.ajax({
        url: "#{properting_show_property_info_path}",
        dataType: 'script',
        data: { id: property_id },
        success: function(data){
          // stop scroll and drag for map under modal window
          aPropertyMap.map.scrollWheelZoom.disable();
          aPropertyMap.map.dragging.disable();
        }
      })
    }

    function getMapPopupContent(e) {
      var content = e.latlng.toString()
      return content
    }
  })
