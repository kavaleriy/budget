:scss
  //init colors
  $status-up: green;
  $status-some: #ffd600;
  $status-down: red;

  #results{
    margin-bottom: 10px;
    .nav-tabs > li > a,
    .panel-group .panel,
    .form-control{
      border-radius: 0;
    }
    .tab-content{
      .tab-pane{
        .codes-list{
          margin-top: 20px;
          .input{
            label{
              display: inline;
              font-weight: normal;
            }
          }
          .run-selected{
            display: block;
            margin-bottom: 10px;
            border-radius: 0;
          }
          input.status-checkbox[type="checkbox"] {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;

            width: 20px;
            height: 20px;
            margin-right: 15px;
            &[name="up"]{
              background-color: $status-up;
            }
            &[name="some"]{
              background-color: $status-some;
                  }
            &[name="down"]{
              background-color: $status-down;
            }
            &:checked {
              &:after{
                content: '\2714';
                padding-left: 3px;
                position: absolute;
                font-size: 18px;
                color: white;
              }
            }
            &:focus {
              outline: none;
            }
          }
          .status{
            display: inline-block;
            width: 12px;
            height: 13px;
            border-bottom: 1px solid white;
            &.color-up{
              background-color: $status-up;
            }
            &.color-some{
              background-color: $status-some;
            }
            &.color-down{
              background-color: $status-down;
            }
          }
        }
      }
    }
    .sharing{
      display: none;
      .show{
        display: block;
      }
    }
  }

= javascript_include_tag 'municipal/chart_unit'

%ul.nav.nav-tabs{role: 'tablist'}
  %li.active
    %a{role: 'tab', 'data-toggle' => 'tab', href: '#form_1'}
      = t('guide_filters.type_codes.form_1')
  %li
    %a{role: 'tab', 'data-toggle' => 'tab', href: '#form_2'}
      = t('guide_filters.type_codes.form_2')
  %li
    %a{role: 'tab', 'data-toggle' => 'tab', href: '#form_7'}
      = t('guide_filters.type_codes.form_3')
  -#%li
    %a{role: 'tab', 'data-toggle' => 'tab', href: '#analysis'}
      Фінансова аналітика(зведена)
  %li
    %a{role: 'tab', 'data-toggle' => 'tab', href: '#compare'}
      = t('enterprise.compare')
  %li
    %a{role: 'tab', 'data-toggle' => 'tab', href: '#cp_info'}
      = t('enterprise.cp_info')

.tab-content.charts
  #form_1.tab-pane.fade.in.active
    = render partial: 'codes_list', locals: { codes: @codes_form_1, code_type: 1 }

  #form_2.tab-pane.fade
    = render partial: 'codes_list', locals: { codes: @codes_form_2, code_type: 2 }

  #form_7.tab-pane.fade
    = render partial: 'codes_list', locals: { codes: @codes_form_7, code_type: 7 }

  #cp_info.tab-pane.fade
    = render partial: 'municipal/public_enterprises/repair_info'

  -##analysis.tab-pane.fade
    %h4
      %span Похідні показники
    = render partial: 'analysis_chart'

  #compare.tab-pane.fade
    = render partial: 'compare_enterprises'

.row.sharing
  -#.col-xs-6
    .social-btns#share_results
  .col-xs-12.text-left
    .embeded-btn
      = render partial: 'embeded_btn', locals: {url: municipal_enterprise_from_town_path(params[:town_id], params[:enterprise_id] )}

:javascript
  unit_chart = new ChartUnit;

  $(document).ready(function(){

    // show embed_btn if view in town profile
    if ($('#enterprise-analysis').parents('.modules-wrapper').length) {
      $('.sharing').addClass('show');
    }

    $('#form_1 .run-selected').on('click', function(){
      get_charts_data('#form_1')
    });

    $('#form_2 .run-selected').on('click', function(){
      get_charts_data('#form_2')
    });

    $('#form_7 .run-selected').on('click', function(){
      get_charts_data('#form_7', "#{municipal_analysis_charts_path}")
    });

    // load page with first nav-tab content
    $('#form_1 .run-selected').trigger("click");

    // load nav-tabs content if first click
    $('.nav-tabs li a').click(function(){
      var id_chart = $(this).attr('href');

      if($(id_chart).find('canvas').length == 0){
        $(id_chart + ' .run-selected').trigger("click");
      }
    })

    $('.status-checkbox').change(function(){
      var status = $(this);
      var checkboxes = status.closest('.codes-list').find('.' + status.val());
      checkboxes.prop('checked', status.is(':checked'));
    })

    function selected_items(id_charts){
      var result = $(id_charts + ' input.code-checkbox:checked');
      var arr = [];

      result.each(function(){
        id = $(this).val();
        arr.push(id);
      })
      return arr;
    }

    function get_charts_data(selector, path = "#{municipal_reporting_charts_path}"){
      var codes = selected_items(selector);

      $.ajax({
        url: path,
        type: "GET",
        // async: false, // hide for responsive charts on fullscreen
        dataType: 'script',
        data: {
          enterprise_id: $('#_enterprises').val(),
          codes: codes
        },
        success: function() {
          $.ajax({
            url: path,
            type: "GET",
            // async: false,
            dataType: 'json',
            data: {
              enterprise_id: $('#_enterprises').val(),
              codes: codes
            },
            success: function(json) {
              create_charts(json);
            }
          })
        }
      })
    }

    function create_charts(data_charts){
      $.each(data_charts, function(key, value) {
        var data_chart = {};
        var code = Object.keys(value)[0];
        data_chart['data'] = [];
        data_chart['years'] = [];
        data_chart['code'] = code;

        $.each(value[code]['years'], function(k, v){
          data_chart['years'].push(k);
          data_chart['data'].push(v);
        });

        build_chart(data_chart);
      })
    }

    function change_unit(data){
      if ($('#form_7').hasClass('active')) {
        return data['data']
      }
      else{
        return unit_chart.data_by_unit(data['data'], data['years']);
      }
    };

    function build_chart(data){
      var code = data['code'];
      var chart_id = 'chart-' + code;
      var ctx = document.getElementById(chart_id).getContext('2d');
      var myChart;

      myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: data['years'],
          datasets: [{
            label: code,
            lineTension: 0.5,

            // fill: false,
            // backgroundColor: "rgba(240, 177, 80, 0.5)",
            backgroundColor: "rgba(143, 171, 59, 0.5)",

            borderColor: "#fff",
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0.1,
            borderJoinStyle: 'miter',

            pointRadius: 5,
            pointBorderWidth: 2,
            pointHitRadius: 4,
            pointBackgroundColor: "#0c2231",
            pointBorderColor: "#fff",

            pointHoverRadius: 5,
            pointHoverBorderWidth: 2,
            pointHoverHitRadius: 4,
            pointHoverBackgroundColor: "#ffd304",
            pointHoverBorderColor: "#fff",

            // data: data['data'],
            data: change_unit(data),

            spanGaps: true,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          scaleStartValue : 0,
          legend: {
            display: false
          },
          scales: {
            xAxes: [
              {
                gridLines: {
                  display: false,
                  color: '#fff',
                  // lineWidth: 1,
                  zeroLineWidth: 3,
                  zeroLineColor: '#fff'
                },
                ticks: {
                  fontColor: '#fff',
                }
              }
            ],
            yAxes: [
              {
                id: 'y-axis-0',
                gridLines: {
                  // display: true,
                  color: '#fff',
                  // lineWidth: 1,
                  zeroLineWidth: 3,
                  zeroLineColor: '#fff'
                },
                scaleLabel: {
                  fontColor: '#fff'
                },
                ticks: {
                  fontColor: '#fff',
                  padding: 20,
                  // min: 0,
                  // maxTicksLimit: 6,
                  // stepSize: step
                }
              }
            ]
          }
        }
      })
    }
  })


-#:javascript
  $(document).ready(function(){
    var data1;
    var codes;

    $.ajax({
      url: "#{municipal_analysis_chart_codes_path}",
      type: "GET",
      dataType: 'json',
      data: {
        enterprise_id: $('#_enterprises').val()
      },
      success: function(json) {
        codes = json;
        get_chart(codes)
      }
    })

    function get_chart(codes){
      $.ajax({
        url: "#{municipal_analysis_chart_path}",
        type: "GET",
        dataType: 'json',
        data: {
          enterprise_id: $('#_enterprises').val(),
          codes: codes
        },
        success: function(json) {
          data1 = json;
          // console.log(json);
          create_chart();
        }
      })
    }

    function dynamicColors() {
      var r = Math.floor(Math.random() * 255);
      var g = Math.floor(Math.random() * 255);
      var b = Math.floor(Math.random() * 255);
      return "rgba(" + r + "," + g + "," + b + ",0.4)";
    }

    function create_chart(){
      // console.log(data1);
      var data_chart = [];
      var years = [];

      $.each(data1, function(key, value) {
        data_chart[key] = {}
        data_chart[key]['label'] =  value[codes[key]]['abbr'];
        data_chart[key]['spanGaps'] =  true;
        data_chart[key]['data'] = [];
        data_chart[key]['backgroundColor'] = dynamicColors();

        $.each(value[codes[key]]['years'], function(k, v){
          years.push(k);
          data_chart[key]['data'].push(v);
        });
      })

      var data_years = Array.from(new Set(years));

      // If call this function with selected code
      // Because chart buggy with old selected codes
      // if (typeof code === 'string' ){
      //   // find container old chart
      //   var lineChart = $("#code-an-chart").parent();
      //   // drop old chart canvas
      //   $("#code-an-chart").remove();
      //   // add new canvas
      //   lineChart.append('<canvas id="code-an-chart">');
      //   // drop iframe, drop old charts
      //   $('.chartjs-hidden-iframe').remove();
      // }

      // var years = [];
      // var data_years = data1[0][code[0]]['years'];
      //
      // $.each(data_years, function(key, value){
      //   years.push(key);
      // });

      //desc for this graph
      // $("#desc").text(value['desc']);

      build_chart(data_years, data_chart)
    }

    function build_chart(years, data){
      var ctx = document.getElementById("code-an-chart").getContext('2d');
      // var gradient = ctx.createLinearGradient(0, 0, 0, 300);
      var myChart;
      // gradient.addColorStop(0, 'green');
      // gradient.addColorStop(0.8, 'yellow');
      // gradient.addColorStop(1, 'orange');

      myChart = new Chart(ctx, {
        type: 'line',
        data: {
          labels: years,
          datasets: data
        },
        options: {
          responsive: true,
          maintainAspectRatio: true,
          scaleStartValue : 0,
          scales: {
            xAxes: [{
              // stacked: true
            }],
            yAxes: [{
              // stacked: true
            }]
          }
        }
      })
    }

  })
